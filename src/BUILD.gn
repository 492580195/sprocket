import("//build/config/features.gni")
import("//build/config/sanitizers/sanitizers.gni")
import("//build/config/ui.gni")
import("//media/media_options.gni")
import("//tools/grit/repack.gni")
import("//tools/grit/grit_rule.gni")

declare_args() {
  sprocket_version = "0.1.0.0"
}

static_library("sprocket_lib") {
  defines = [ "SPROCKET_VERSION=\"$sprocket_version\"" ]

  sources = [
    "app/main_delegate.cc",
    "app/main_delegate.h",
    "browser/browser_context.cc",
    "browser/browser_context.h",
    "browser/browser_main.cc",
    "browser/browser_main.h",
    "browser/browser_main_parts.cc",
    "browser/browser_main_parts.h",
    "browser/content_browser_client.cc",
    "browser/content_browser_client.h",
    "browser/net/url_request_context_getter.cc",
    "browser/net/url_request_context_getter.h",
    "browser/ui/window.cc",
    "browser/ui/window.h",
    "browser/web_contents.cc",
    "browser/web_contents.h",
    "common/content_client.cc",
    "common/content_client.h",
    "common/switches.cc",
    "common/switches.h",
  ]

  if (use_aura) {
    sources += [
      "browser/ui/views_delegate_aura.cc",
      "browser/ui/views_delegate_aura.h",
      "browser/ui/window_aura.cc",
      "browser/ui/window_delegate_view_aura.cc",
      "browser/ui/window_delegate_view_aura.h",
    ]
  }

  if (is_android) {
    sources += [
      "android/jni_registrar.cc",
      "android/jni_registrar.h",
      "android/manager.cc",
      "android/manager.h",
      "browser/ui/window_android.cc",
    ]
  }

  public_deps = [
    # This exposes all public content APIs.
    "//content/public/app:both",
    "//content/public/browser",
    "//content/public/common",
    "//content/public/plugin",
    "//content/public/renderer",
    "//content/public/utility",
  ]
  deps = [
    ":resources",
    "//base",
    "//components/plugins/renderer",
    "//content:resources",
    "//content/app/resources",
    "//content/app/strings",
    "//gpu",
    "//ipc",
    "//media",
    "//net",
    "//net:net_resources",
    "//skia",
    "//third_party/WebKit/public:blink",
    "//third_party/WebKit/public:image_resources",
    "//third_party/WebKit/public:resources",
    "//third_party/icu",
    "//ui/base",
    "//ui/base/ime",
    "//ui/events:events_base",
    "//ui/gfx",
    "//ui/gfx/geometry",
    "//ui/gfx/ipc",
    "//ui/gl",
    "//url",
    "//v8",
  ]

  if (is_android) {
    deps += [ "//sprocket/android:sprocket_jni_headers" ]
  }

  if (use_aura) {
    deps += [
      "//ui/aura",
      "//ui/events",
      "//ui/strings",
      "//ui/wm",
      "//ui/views",
      "//ui/views/controls/webview",
    ]
  }
 }

grit("sprocket_resources_grit") {
  visibility = [ ":*" ]
  source = "sprocket_resources.grd"
  outputs = [
    "grit/sprocket_resources.h",
    "sprocket_resources.pak",
  ]
  resource_ids = ""
}

copy("copy_sprocket_resources") {
  sources = [
    "$target_gen_dir/sprocket_resources.pak",
  ]
  outputs = [
    "$root_gen_dir/sprocket_resources.pak",
  ]

  public_deps = [
    ":sprocket_resources_grit",
  ]
}

group("resources") {
  public_deps = [
    ":copy_sprocket_resources",
  ]
}

repack("pak") {
  sources = [
    "$root_gen_dir/blink/public/resources/blink_image_resources_100_percent.pak",
    "$root_gen_dir/blink/public/resources/blink_resources.pak",
    "$root_gen_dir/content/app/resources/content_resources_100_percent.pak",
    "$root_gen_dir/content/app/strings/content_strings_en-US.pak",
    "$root_gen_dir/content/browser/tracing/tracing_resources.pak",
    "$root_gen_dir/content/content_resources.pak",
    "$root_gen_dir/sprocket_resources.pak",
    "$root_gen_dir/net/net_resources.pak",
    "$root_gen_dir/ui/resources/ui_resources_100_percent.pak",
    "$root_gen_dir/ui/resources/webui_resources.pak",
    "$root_gen_dir/ui/strings/app_locale_settings_en-US.pak",
    "$root_gen_dir/ui/strings/ui_strings_en-US.pak",
  ]

  deps = [
    ":resources",
    "//content:resources",
    "//content/app/resources",
    "//content/app/strings",
    "//content/browser/tracing:resources",
    "//net:net_resources",
    "//third_party/WebKit/public:image_resources",
    "//third_party/WebKit/public:resources",
    "//ui/resources",
    "//ui/strings",
  ]

  if (toolkit_views) {
    deps += [ "//ui/views/resources" ]
    sources +=
        [ "$root_gen_dir/ui/views/resources/views_resources_100_percent.pak" ]
  }

  output = "$root_out_dir/sprocket.pak"
}

executable("sprocket") {
  sources = [
    "app/main.cc",
  ]

  defines = []

  deps = [
    ":sprocket_lib",
    ":pak",
    "//build/config/sanitizers:deps",
  ]
}
